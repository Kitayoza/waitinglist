<!DOCTYPE html>
<html lang="ru">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>–ö–∞–±–∏–Ω–µ—Ç –ø–∞—Ü–∏–µ–Ω—Ç–∞</title>
  <link href="https://fonts.googleapis.com/css2?family=Roboto&display=swap" rel="stylesheet" />
  <style>
    * { box-sizing: border-box; }
    body {
      margin: 0;
      font-family: 'Roboto', sans-serif;
      background: #f4f4f4;
      color: #333;
    }
    header {
      background: #fff;
      padding: 10px 20px;
      display: flex;
      justify-content: space-between;
      align-items: center;
      border-bottom: 1px solid #ccc;
    }
    .logo {
      display: flex;
      align-items: center;
      gap: 10px;
    }
    .logo img {
      height: 50px;
    }
    nav {
      background: #0097b2;
    }
    nav ul {
      display: flex;
      list-style: none;
      margin: 0;
      padding: 0;
    }
    nav li {
      padding: 15px 20px;
      color: white;
      cursor: pointer;
    }
    nav li.active {
      background: #00acc1;
      border-bottom: 3px solid white;
    }
    .container {
      padding: 20px;
    }

    /* Login Section */
    .login-section {
      display: flex;
      gap: 40px;
    }
    .login-panel {
      background: white;
      padding: 20px;
      width: 300px;
      box-shadow: 0 0 5px rgba(0,0,0,0.1);
    }
    .login-panel h2 {
      background: #0097b2;
      color: white;
      padding: 10px;
      margin-top: 0;
    }
    .login-panel label {
      display: block;
      margin-top: 10px;
    }
    .login-panel input[type="text"],
    .login-panel input[type="password"] {
      width: 100%;
      padding: 8px;
      margin-top: 5px;
      border: 1px solid #ccc;
      border-radius: 3px;
    }
    .login-panel .checkbox {
      margin-top: 10px;
    }
    .login-panel .btn {
      display: inline-block;
      margin-top: 10px;
      background: #0097b2;
      color: white;
      padding: 8px 15px;
      border: none;
      border-radius: 3px;
      cursor: pointer;
      text-decoration: none;
    }
    .info ul {
      padding-left: 20px;
    }

    /* Specialists Section */
    .specialists-section {
      display: flex;
      gap: 20px;
    }
    .left-panel {
      width: 300px;
    }
    .specialty-card {
      background: white;
      padding: 15px;
      margin-bottom: 10px;
      border-left: 5px solid #0097b2;
      display: flex;
      gap: 10px;
      align-items: center;
      border-radius: 5px;
      cursor: pointer;
    }
    .specialty-card.selected {
      background: #00acc1;
      color: white;
    }
    .specialty-card small {
      display: block;
      color: #555;
    }
    .specialty-card.selected small {
      color: #e0e0e0;
    }
    .right-panel {
      flex: 1;
    }
    .doctor-card {
      background: white;
      padding: 15px;
      margin-bottom: 15px;
      display: flex;
      justify-content: space-between;
      align-items: center;
      border-left: 3px solid #0097b2;
      border-radius: 5px;
      cursor: pointer;
    }
    .doctor-info {
      display: flex;
      align-items: center;
      gap: 15px;
    }
    .doctor-info img {
      width: 60px;
      height: 60px;
      border-radius: 50%;
    }
    .doctor-details strong {
      font-size: 16px;
    }
    .price {
      font-weight: bold;
      color: #f7941e;
      font-size: 18px;
    }

    /* Schedule styles */
    .schedule-box {
      transition: all 0.3s ease;
      max-height: 0;
      overflow: hidden;
      margin-top: 15px;
    }
    .schedule-box.active {
      max-height: 500px;
    }
    .schedule-table {
      width: 100%;
      border-collapse: collapse;
      margin-top: 10px;
    }
    .schedule-table th, .schedule-table td {
      padding: 8px;
      text-align: center;
      border: 1px solid #ddd;
    }
    .schedule-table th {
      background-color: #f2f2f2;
    }
    .selectable-date {
      cursor: pointer;
      background-color: #e0f7fa;
      padding: 10px;
    }
    .selectable-date:hover {
      background-color: #b2ebf2;
    }

    /* Hide/Show sections */
    .tab-content {
      display: none;
    }
    .tab-content.active {
      display: block;
    }

    .form-actions {
      display: flex;
      gap: 10px;
      margin-top: 10px;
    }

    .form-actions .btn {
      flex: 1;
      text-align: center;
    }

    input[type="submit"].btn {
      -webkit-appearance: none;
      -moz-appearance: none;
      appearance: none;
      background: #0097b2;
      color: white;
      border: none;
      cursor: pointer;
      font-family: inherit;
      padding: 8px 15px;
      border-radius: 3px;
    }

    input[type="submit"].btn:hover {
      background: #007a8a;
    }

    .schedule-price {
      min-width: 100px;
      padding: 10px;
      background: #f8f8f8;
      border-radius: 5px;
      text-align: center;
      margin-top: 10px;
    }
    .schedule-price .price-label {
      font-size: 14px;
      color: #666;
    }
    .schedule-price .price-value {
      font-weight: bold;
      color: #f7941e;
      font-size: 18px;
      margin-top: 5px;
    }

    .time-select-btn {
      background: #0097b2;
      color: white;
      border: none;
      padding: 5px 10px;
      border-radius: 3px;
      cursor: pointer;
      font-family: inherit;
      margin: 2px;
    }

    .time-select-btn:hover {
      background: #007a8a;
    }
  </style>
</head>
<body>
  <header>
    <div class="logo">
      <img src="logo.png" alt="–õ–æ–≥–æ—Ç–∏–ø" />
      <div>
        <h2 style="margin: 0; color: #007a87">–ö–∞–±–∏–Ω–µ—Ç –ø–∞—Ü–∏–µ–Ω—Ç–∞</h2>
        <small>–ö–ª–∏–Ω–∏–∫–∞ "–ó–î–û–†–û–í–¨–ï"</small>
      </div>
    </div>
    <div>
      <small>–¢–µ–ª–µ—Ñ–æ–Ω–Ω—ã–π —Ü–µ–Ω—Ç—Ä: (888) 888-88-88</small>
    </div>
  </header>
  <nav>
    <ul id="nav-tabs">
      <li class="active" data-tab="login">–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç</li>
      <li data-tab="specialists">–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—ã</li>
    </ul>
  </nav>

  <!-- Login Tab -->
  <div class="container tab-content active" id="login">
    <div class="login-section">
      <div class="login-panel">
        <h2>üîí –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç</h2>

        <% if flash[:alert] %>
          <div class="alert alert-danger">
            <%= flash[:alert] %>
          </div>
        <% end %>

        <%= form_with url: login_path, local: true do |form| %>
          <div class="field">
            <%= form.label :login, "–õ–æ–≥–∏–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:" %>
            <%= form.text_field :login, placeholder: "–í–≤–µ–¥–∏—Ç–µ –ª–æ–≥–∏–Ω", class: "form-control" %>
          </div>

          <div class="field">
            <%= form.label :password, "–ü–∞—Ä–æ–ª—å:" %>
            <%= form.password_field :password, class: "form-control" %>
          </div>

          <div class="checkbox">
            <%= form.check_box :remember_me %>
            <label for="remember_me">–°–æ–≥–ª–∞—Å–µ–Ω(–Ω–∞) <a href="#">–Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö</a></label>
          </div>

          <%= form.submit "üîì –í–æ–π—Ç–∏", class: "btn" %>
          <button class="btn"><%= link_to 'üì¶ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è', new_registration_path %></button>
        <% end %>
      </div>

      <div class="info">
        <h3>–£–≤–∞–∂–∞–µ–º—ã–π –ø–∞—Ü–∏–µ–Ω—Ç!</h3>
        <p>–ü–∞—Ü–∏–µ–Ω—Ç—ã —Å —Å–∏–º–ø—Ç–æ–º–∞–º–∏ –û–†–í–ò –Ω–∞ –ø–ª–∞–Ω–æ–≤—É—é –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é –Ω–µ –¥–æ–ø—É—Å–∫–∞—é—Ç—Å—è!</p>
        <ul>
          <li>–í—ã –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç–µ –¥–∏—Å—Ç–∞–Ω—Ü–∏–æ–Ω–Ω—É—é –∑–∞–ø–∏—Å—å –Ω–∞ –ø—Ä–∏–µ–º –∫ –≤—Ä–∞—á—É-—Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—É –ö–ª–∏–Ω–∏–∫–∏ ¬´–ó–¥–æ—Ä–æ–≤—å–µ¬ª –≤ –≥. –†–æ—Å—Ç–æ–≤–µ-–Ω–∞-–î–æ–Ω—É.</li>
          <li>–ó–∞–ø–∏—Å—å –Ω–∞ –ø–µ—Ä–≤–∏—á–Ω—ã–π –ø—Ä–∏–µ–º –ø–æ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—é –∏–∑ –ø–æ–ª–∏–∫–ª–∏–Ω–∏–∫ –≥–æ—Ä–æ–¥–∞, –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç—Å—è –≤ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ç—É—Ä–µ –º–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–π –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏, –≤—ã–¥–∞–≤—à–µ–π –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ.</li>
          <li>–ü—Ä–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∞—è —É—Å–ª—É–≥–∞ –±—É–¥–µ—Ç –æ–∫–∞–∑–∞–Ω–∞ –Ω–∞ –ø–ª–∞—Ç–Ω–æ–π –æ—Å–Ω–æ–≤–µ (–Ω–µ–æ–±—Ö–æ–¥–∏–º–∞ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–∞—è –æ–ø–ª–∞—Ç–∞ –Ω–∞ —Å–∞–π—Ç–µ).</li>
          <li>–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –º–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–π –ø–æ–º–æ—â–∏ –í–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —è–≤–∏—Ç—å—Å—è –∑–∞ 15-20 –º–∏–Ω—É—Ç –¥–æ –Ω–∞–∑–Ω–∞—á–µ–Ω–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏, –ø—Ä–∏ —Å–µ–±–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∏–º–µ—Ç—å: –ø–∞—Å–ø–æ—Ä—Ç, –°–ù–ò–õ–°, –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ.</li>
          <li>–ó–∞–ø–∏—Å—å —á–µ—Ä–µ–∑ –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –Ω–∞ –±–ª–∏–∂–∞–π—à—É—é –Ω–µ–¥–µ–ª—é.</li>
          <li>–ü—Ä–∏–µ–º –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤ –≤ —Å—É–±–±–æ—Ç–Ω–∏–µ –¥–Ω–∏ –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –Ω–∞ –ø–ª–∞—Ç–Ω–æ–π –æ—Å–Ω–æ–≤–µ (–≤–Ω–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –Ω–∞–ª–∏—á–∏—è –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è, –æ—Ñ–æ—Ä–º–ª–µ–Ω–Ω–æ–≥–æ –¥–æ–ª–∂–Ω—ã–º –æ–±—Ä–∞–∑–æ–º).</li>
          <li>–î–ª—è –∑–∞–ø–∏—Å–∏ –ø–æ –î–ú–° –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –∫–æ–ª–ª-—Ü–µ–Ω—Ç—Ä.</li>
        </ul>
      </div>
    </div>
  </div>

  <div class="container tab-content" id="specialists">
    <div class="specialists-section">
      <!-- –°–ü–ï–¶–ò–ê–õ–¨–ù–û–°–¢–ò (–ª–µ–≤–∞—è –ø–∞–Ω–µ–ª—å) -->
      <div class="left-panel">
        <% @specializations.each_with_index do |spec, index| %>
          <div class="specialty-card <%= 'selected' if index == 0 %>" data-specialty="<%= spec.id %>">
            <div>
              <strong><%= spec.name %></strong><br />
              <small>–î–æ—Å—Ç—É–ø–Ω–æ: <%= Doctor.where(specialization_id: spec.id).count %></small>
            </div>
          </div>
        <% end %>
      </div>  

      <!-- –í–†–ê–ß–ò (–ø—Ä–∞–≤–∞—è –ø–∞–Ω–µ–ª—å) -->
      <div class="right-panel">
        <% @specializations.each_with_index do |spec, index| %>
          <div class="doctors-list" data-doctors="<%= spec.id %>" style="display: <%= index == 0 ? 'block' : 'none' %>;">
            <% Doctor.where(specialization_id: spec.id).each do |doctor| %>
              <div class="doctor-card" data-doctor-id="<%= doctor.id %>">
                <div class="doctor-info">
                  <div class="doctor-details">
                    <strong><%= doctor.full_name %></strong><br />
                    <% if doctor.description.present? %>
                      <small><%= doctor.description %></small>
                    <% end %>
                  </div>
                </div>
                <div class="doctor-actions">
                  <div class="price"></div>
                </div>
                <!-- –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ -->
                <div class="schedule-box">
                  <div class="schedule-header" style="display: flex; justify-content: space-between; align-items: center;">
                    <strong>–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –Ω–µ–¥–µ–ª—é</strong>
                  </div>
                  <table class="schedule-table">
                    <thead>
                      <tr class="schedule-dates-row">
                        <!-- –ó–∞–≥–æ–ª–æ–≤–∫–∏ –¥–Ω–µ–π (–ø–Ω, –≤—Ç...) –≤—Å—Ç–∞–≤—è—Ç—Å—è —Å–∫—Ä–∏–ø—Ç–æ–º -->
                      </tr>
                    </thead>
                    <tbody>
                      <tr class="schedule-days-row">
                        <!-- –Ø—á–µ–π–∫–∏ —Å –¥–∞—Ç–∞–º–∏ –ø–æ—è–≤—è—Ç—Å—è —Ç—É—Ç -->
                      </tr>
                    </tbody>
                  </table>
                  <div class="schedule-content">
                    <p><strong>–ê–¥—Ä–µ—Å —Ñ–∏–ª–∏–∞–ª–∞:</strong><br>–†–æ—Å—Ç–æ–≤—Å–∫–∞—è –æ–±–ª., –≥. –†–æ—Å—Ç–æ–≤-–Ω–∞-–î–æ–Ω—É, –ø—Ä-–∫—Ç –õ–µ–Ω–∏–Ω–∞, –¥. 2</p>
                    <p style="font-size: 12px; margin-top: 5px;">–ß–∞—Å–æ–≤–æ–π –ø–æ—è—Å: UTC+</p>
                  </div>
                  <div class="schedule-price">
                    <div class="price-label">–°—Ç–æ–∏–º–æ—Å—Ç—å –ø—Ä–∏–µ–º–∞:</div>
                    <div class="price-value"><%= doctor.price %> ‚ÇΩ</div>
                  </div>
                </div>
              </div>
            <% end %>
          </div>
        <% end %>
      </div>
    </div>
  </div>

  <script>
    document.addEventListener('DOMContentLoaded', function() {
      // –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –≤–∫–ª–∞–¥–æ–∫
      const tabs = document.querySelectorAll('#nav-tabs li');
      const contents = document.querySelectorAll('.tab-content');

      tabs.forEach(tab => {
        tab.addEventListener('click', function() {
          tabs.forEach(t => t.classList.remove('active'));
          contents.forEach(c => c.classList.remove('active'));

          this.classList.add('active');
          document.getElementById(this.dataset.tab).classList.add('active');
        });
      });

      // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—è–º
      const specialtyCards = document.querySelectorAll('.specialty-card');
      const doctorLists = document.querySelectorAll('.doctors-list');

      specialtyCards.forEach(card => {
        card.addEventListener('click', () => {
          specialtyCards.forEach(c => c.classList.remove('selected'));
          card.classList.add('selected');

          const selectedSpecialty = card.dataset.specialty;

          doctorLists.forEach(list => {
            list.style.display = list.dataset.doctors === selectedSpecialty ? 'block' : 'none';
          });
        });
      });

      // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –Ω–∞ –∫–∞—Ä—Ç–æ—á–∫—É –≤—Ä–∞—á–∞
      document.querySelectorAll('.doctor-card').forEach(card => {
        card.addEventListener('click', (e) => {
          // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–ª–∏–∫ –Ω–µ –±—ã–ª –ø–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é –∏–ª–∏ –µ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞–º
          if (!e.target.closest('.schedule-box') && !e.target.classList.contains('time-select-btn')) {
            toggleSchedule(card);

            // –û–±–Ω–æ–≤–ª—è–µ–º —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –æ—Ç–∫—Ä—ã—Ç–∏–∏
            const scheduleBox = card.querySelector('.schedule-box');
            if (scheduleBox.classList.contains('active')) {
              updateScheduleHeaders();
              const name = card.querySelector('.doctor-details strong').textContent.trim();
              const doctorId = card.dataset.doctorId;
              const priceText = card.querySelector('.price').textContent.trim();
              const price = priceText.replace(/[^\d]/g, '');
              const table = card.querySelector('.schedule-table');
              if (table) {
                renderSchedule(name, doctorId, price, table);
              }
            }
          }
        });
      });

      // –§—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è
      function toggleSchedule(card) {
        const schedule = card.querySelector('.schedule-box');
        const allSchedules = document.querySelectorAll('.schedule-box');

        // –ó–∞–∫—Ä—ã–≤–∞–µ–º –≤—Å–µ –¥—Ä—É–≥–∏–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è
        allSchedules.forEach(s => {
          if (s !== schedule) s.classList.remove('active');
        });

        // –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º —Ç–µ–∫—É—â–µ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ
        schedule.classList.toggle('active');

        // –ü—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º –∫ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é, –µ—Å–ª–∏ –æ–Ω–æ –æ—Ç–∫—Ä—ã—Ç–æ
        if (schedule.classList.contains('active')) {
          schedule.scrollIntoView({ behavior: 'smooth', block: 'nearest' });
        }
      }

      // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è
      function updateScheduleHeaders() {
        const headers = document.querySelectorAll('.schedule-dates-row');

        headers.forEach(tr => {
          tr.innerHTML = ''; // –æ—á–∏—â–∞–µ–º
          const start = getStartOfCurrentWeek();

          for (let i = 0; i < 7; i++) {
            const day = new Date(start);
            day.setDate(start.getDate() + i);
            const dayName = ['–ø–Ω','–≤—Ç','—Å—Ä','—á—Ç','–ø—Ç','—Å–±','–≤—Å'][day.getDay()];
            const formatted = day.toLocaleDateString('ru-RU', { day: 'numeric', month: 'numeric' });
            const th = document.createElement('th');
            th.innerHTML = `${dayName}<br>${formatted}`;
            tr.appendChild(th);
          }
        });
      }

      // –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞—Ç—ã –Ω–∞—á–∞–ª–∞ —Ç–µ–∫—É—â–µ–π –Ω–µ–¥–µ–ª–∏ (–ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫)
      function getStartOfCurrentWeek() {
        const today = new Date();
        const day = today.getDay();
        const diff = today.getDate() - day + (day === 0 ? -6 : 1); // adjust when day is sunday
        return new Date(today.setDate(diff));
      }

      async function createAppointment(doctorId, doctorName, date, time) {
        try {
          // –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö
          if (!doctorId || !doctorName || !date || !time) {
            throw new Error('–ù–µ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω—ã');
          }

          const response = await fetch('/appointments', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
              'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').content
            },
            body: JSON.stringify({
              user_login: '<%= current_user&.login || "guest_#{Time.now.to_i}" %>',
              doctor_id: doctorId,
              doctor_name: doctorName,
              date: date,
              time: time
            })
          });

          const result = await response.json();

          if (!response.ok) {
            throw new Error(result.message || `–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞: ${result.error || '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'}`);
          }

          alert('–ó–∞–ø–∏—Å—å —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞!');
          return result;
        } catch (error) {
          console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∑–∞–ø–∏—Å–∏:', error);
          alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∑–∞–ø–∏—Å–∏: ' + error.message);
          throw error;
        }
      }

      // –û–±–Ω–æ–≤–ª—ë–Ω–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –≤—ã–±–æ—Ä–∞ –≤—Ä–µ–º–µ–Ω–∏
      function setupTimeButton(timeButton, doctorId, doctorName, isoDate) {
        timeButton.onclick = async (e) => {
          e.stopPropagation();
          const time = prompt("–í–≤–µ–¥–∏—Ç–µ –≤—Ä–µ–º—è –ø—Ä–∏–µ–º–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, 14:30):");

          if (!time || !time.match(/^\d{1,2}:\d{2}$/)) {
            alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤—Ä–µ–º—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ –ß–ß:MM');
            return;
          }

          try {
            await createAppointment(doctorId, doctorName, isoDate, time);
          } catch (error) {
            // –û—à–∏–±–∫–∞ —É–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞ –≤ createAppointment
          }
        };
      }

      // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è
      function renderSchedule(doctorName, doctorId, price, tableElement) {
        const daysOfWeek = ['–ø–Ω','–≤—Ç','—Å—Ä','—á—Ç','–ø—Ç','—Å–±','–≤—Å'];
        const headerRow = tableElement.querySelector('.schedule-dates-row');
        const bodyRow = tableElement.querySelector('.schedule-days-row');

        headerRow.innerHTML = '';
        bodyRow.innerHTML = '';

        const startDate = getStartOfCurrentWeek();

        for (let i = 0; i < 7; i++) {
          const date = new Date(startDate);
          date.setDate(startDate.getDate() + i);
          const formattedDate = date.toLocaleDateString('ru-RU', { day: 'numeric', month: 'numeric' });
          const isoDate = date.toISOString().split('T')[0]; // –§–æ—Ä–º–∞—Ç YYYY-MM-DD

          // –ó–∞–≥–æ–ª–æ–≤–æ–∫ –¥–Ω—è
          const th = document.createElement('th');
          th.innerHTML = `${daysOfWeek[i]}<br>${formattedDate}`;
          headerRow.appendChild(th);

          // –Ø—á–µ–π–∫–∞ –¥–ª—è –∑–∞–ø–∏—Å–∏
          const td = document.createElement('td');

          // –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –≤—ã–±–æ—Ä–∞ –≤—Ä–µ–º–µ–Ω–∏
          const timeButton = document.createElement('button');
          timeButton.textContent = '–í—ã–±—Ä–∞—Ç—å –≤—Ä–µ–º—è';
          timeButton.className = 'time-select-btn';

          // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å –Ω–æ–≤–æ–π —Ñ—É–Ω–∫—Ü–∏–µ–π
          setupTimeButton(timeButton, doctorId, doctorName, isoDate);

          td.appendChild(timeButton);
          td.className = 'selectable-date';
          bodyRow.appendChild(td);
        }
      }

      // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
      updateScheduleHeaders();

      // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –¥–ª—è –≤—Å–µ—Ö –≤—Ä–∞—á–µ–π
      document.querySelectorAll('.doctor-card').forEach(card => {
        const name = card.querySelector('.doctor-details strong').textContent.trim();
        const doctorId = card.dataset.doctorId;
        const priceText = card.querySelector('.price').textContent.trim();
        const price = priceText.replace(/[^\d]/g, '');
        const table = card.querySelector('.schedule-table');
        if (table) {
          renderSchedule(name, doctorId, price, table);
        }
      });
    });
  </script>
</body>
</html>